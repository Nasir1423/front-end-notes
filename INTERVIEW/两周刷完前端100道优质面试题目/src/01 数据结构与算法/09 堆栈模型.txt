1. 堆
  - 堆是一种完全二叉树，完全二叉树的特点是除了最后一层外，每一层的节点都是满的，且最后一层的所有节点都尽可能地靠左对齐。
  - 堆分为最大堆和最小堆
    > 最大堆：每个节点的值 >= 其子节点的值
    > 最小堆：每个节点的值 <= 其子节点的值
2. 逻辑结构 Vs. 物理结构
  - 堆的逻辑结构是一颗完全二叉树
  - 堆的物理结构是一个数组！（结合数组连续存储、节省空间的特点 + 堆用于保存引用类型的变量这一点来思考原因）
3. 堆 Vs. BST
  - 堆的查询比 BST 慢，但是增删比 BST 快，维持平衡也更快
  - 二者的时间复杂度都是 O(logn)，logn 也是树的高度
4. 堆的数组实现
  - 数组的第一个元素赋值为 -1，表示忽略不用，这是为了堆的更好的父子节点映射关系的设计
  - 假设某节点在数组中的索引为 i，则其父节点的索引为 ⌊i / 2⌋，左子节点的索引为 2 * i，右子节点的索引为 2 * i + 1
5. 堆栈模型
  - 简单地说，JS 执行代码时，将值类型的变量存储在栈，将引用类型的变量存储在堆
  - 巧妙的是，栈中存储着堆中数据的引用，同时堆是以数组的形式组织的，因此栈中的引用就相当于堆中数据在数组中的索引，只需要 O(1) 就可以直接找到目标，不需要从 root 遍历 */
